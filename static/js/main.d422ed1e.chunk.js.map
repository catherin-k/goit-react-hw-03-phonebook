{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/contactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","type","onChange","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","contact","shortid","generate","nameArr","reduce","acc","toLowerCase","includes","console","log","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d422ed1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form\">\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Number\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contactList.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className=\"contact__list\">\r\n    {contacts.map(({ name, number, id }) => (\r\n      <li key={id} className=\"contact__item\">\r\n        <p className=\"text\">\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          className=\"contacts__btn\"\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"label__filter\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"input__filter\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport \"./App.css\";\n\nimport ContactForm from \"./contactForm\";\nimport ContactList from \"./contactList\";\nimport Filter from \"./filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const nameArr = this.state.contacts.reduce(\n      (acc, contact) => [...acc, contact.name.toLowerCase()],\n      []\n    );\n\n    if (nameArr.includes(name.toLowerCase())) {\n      console.log(\"Alert\");\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n\n    console.log(nameArr);\n    console.log(name);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className=\"title\">contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}